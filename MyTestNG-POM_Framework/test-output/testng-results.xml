<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="my suite" duration-ms="11205" started-at="2020-04-01T18:08:18 IST" finished-at="2020-04-01T18:08:29 IST">
    <groups>
    </groups>
    <test name="my tests 1" duration-ms="11205" started-at="2020-04-01T18:08:18 IST" finished-at="2020-04-01T18:08:29 IST">
      <class name="com.testcases.Test_001">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="setUp" is-config="true" duration-ms="12399" started-at="2020-04-01T18:08:05 IST" finished-at="2020-04-01T18:08:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-04-01T18:08:18 IST" finished-at="2020-04-01T18:08:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2020-04-01T18:08:18 IST" finished-at="2020-04-01T18:08:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testcases.Test_001.test_login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test_login()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="test_login" duration-ms="10533" started-at="2020-04-01T18:08:18 IST" description="test to verify page title" finished-at="2020-04-01T18:08:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-04-01T18:08:28 IST" finished-at="2020-04-01T18:08:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testcases.Test_001.test_login() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-04-01T18:08:28 IST" finished-at="2020-04-01T18:08:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testcases.Test_001.test_login1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test_login1()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="test_login1" duration-ms="133" started-at="2020-04-01T18:08:28 IST" description="test1 to verify page title" finished-at="2020-04-01T18:08:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.testcases.Test_001.test_login1(Test_001.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login1 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-04-01T18:08:29 IST" finished-at="2020-04-01T18:08:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.testcases.Test_001.test_login1() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-04-01T18:08:29 IST" finished-at="2020-04-01T18:08:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.testcases.Test_001@3a5ed7a6]" name="tearDown" is-config="true" duration-ms="1420" started-at="2020-04-01T18:08:29 IST" finished-at="2020-04-01T18:08:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testcases.Test_001 -->
    </test> <!-- my tests 1 -->
  </suite> <!-- my suite -->
</testng-results>
